{"version":3,"sources":["Services/favorite-place-service.js","components/ElementalComponents/Button/styles.js","components/ElementalComponents/Button/Button.jsx","components/LocationSearchInput/styles.js","components/LocationSearchInput/LocationSearchInput.jsx","components/Map/styles.js","components/Map/Map.jsx","Services/auth-services.js","components/ElementalComponents/Form/styles.js","components/ElementalComponents/Form/Form.jsx","components/CreateForm/CreateForm.jsx","components/FavoritePlace/styles.js","components/FavoritePlace/FavoritePlace.jsx","components/Homepage/styles.js","components/Homepage/Homepage.jsx","components/Navbar/styles.js","components/Navbar/Navbar.jsx","components/AuthForm/AuthForm.jsx","App.jsx","index.js"],"names":["favoritePlaceServices","axios","create","baseURL","process","withCredentials","errorHandler","err","formFields","post","then","response","data","catch","get","id","delete","ButtonStyled","styled","button","props","descriptionButton","Button","onClick","handleClick","text","Input","input","PlaceSuggestion","div","LocationSearchInput","handleChange","address","setState","handleSelect","geocodeByAddress","results","getLatLng","latLng","setPlace","state","error","console","value","this","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","Fragment","placeholder","className","icon","faSpinner","size","map","suggestion","active","style","backgroundColor","cursor","key","index","description","React","Component","MapContainer","formMap","Map","initialState","name","lat","parseFloat","lng","zoom","useState","center","parseInt","apiIsLoaded","maps","places","bounds","LatLngBounds","forEach","place","extend","LatLng","getMapBounds","fitBounds","event","addDomListenerOnce","addDomListener","window","bindResizeListener","bootstrapURLKeys","defaultCenter","defaultZoom","options","disableDefaultUI","mapTypeControl","streetViewControl","mapTypeId","styles","featureType","elementType","stylers","visibility","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","tripMap","hasOnlyOneLocalisation","allExperiencesCoords","mapType","coord","Marker","position","renderMarkers","authService","credentials","localStorage","removeItem","slowlyAppears","keyframes","StyledForm","Error","p","FormInner","form","Message","Textarea","textarea","Form","authForm","username","password","showError","setShowError","formState","setFormState","target","fields","field","label","type","onSubmit","formObject","preventDefault","login","authServices","signup","createPlaceForm","log","handleCloseForm","handleRefreshFavoritePlaces","setItem","JSON","stringify","getUser","history","push","message","handleFormSubmit","newPlace","textAlign","authMessage","to","formRedirectLink","formRedirectText","CreateForm","StyledFavoritePlace","li","Container","Description","FavoritePlace","toFixed","placeId","_id","favoritePlaceService","slideup","Visitor","StyledHomepage","FavoritePlacesListContainer","ul","Homepage","displayForm","setDisplayForm","favoritePlaces","setFavoritePlaces","useEffect","userInSession","author","refreshFavoritePlaces","favoritePlacesList","length","StyledNavbar","Brand","img","Logout","Navbar","loggedInUser","src","alt","faSignOutAlt","AuthForm","App","parse","getItem","getTheUser","userObj","handleUpdateUser","updateUser","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"yRAEMA,EAAwBC,IAAMC,OAAO,CACzCC,QAAQ,GAAD,OAAKC,2CAAL,QACPC,iBAAiB,IAGbC,EAAe,SAACC,GACpB,MAAMA,GAIO,EAGC,SAACC,GACb,OAAOR,EACJS,KAAK,YAAaD,GAClBE,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,MAAMP,IAPE,EAUM,WACjB,OAAON,EACJc,IAAI,mBACJJ,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,MAAMP,IAdE,EAiBA,SAACS,GACZ,OAAOf,EACJgB,OADI,0BACsBD,IAC1BL,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,MAAMP,I,2TC/BN,IAAMW,EAAeC,IAAOC,OAAV,KAYrB,SAACC,GAAD,OACAA,EAAMC,mBAAN,iGCGWC,EAfA,SAACF,GAKd,OACE,cAACH,EAAD,CACEI,kBAAmBD,EAAMC,kBACzBE,QAPc,WAChBH,EAAMI,aAAeJ,EAAMI,eAI3B,SAIGJ,EAAMK,Q,ykBCXN,IAAMC,EAAQR,IAAOS,MAAV,KAiBLC,EAAkBV,IAAOW,IAAV,K,gBCsDbC,E,kDA/Db,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAIRW,aAAe,SAACC,GACd,EAAKC,SAAS,CAAED,aANC,EASnBE,aAAe,SAACF,GACdG,2BAAiBH,GACdtB,MAAK,SAAC0B,GAAD,OAAaC,oBAAUD,EAAQ,OACpC1B,MAAK,SAAC4B,GACL,EAAKL,SAAL,aAAgBD,QAASA,GAAYM,IACrC,EAAKlB,MAAMmB,SAAS,EAAKC,UAE1B3B,OAAM,SAAC4B,GAAD,OAAWC,QAAQD,MAAM,QAASA,OAd3C,EAAKD,MAAQ,CAAER,QAAS,IAFP,E,qDAoBjB,OACE,cAAC,IAAD,CACEW,MAAOC,KAAKJ,MAAMR,QAClBa,SAAUD,KAAKb,aACfe,SAAUF,KAAKV,aAHjB,SAKG,gBAAGa,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,uBAAwBC,EAAvD,EAAuDA,QAAvD,OACC,eAAC,IAAMC,SAAP,WACE,cAACzB,EAAD,eACMqB,EAAc,CAChBK,YAAa,oBACbC,UAAW,4BAGf,sBAAKA,UAAU,kCAAf,UACGH,GAAW,cAAC,IAAD,CAAiBI,KAAMC,IAAWC,KAAK,OAClDR,EAAYS,KAAI,SAACC,GAChB,IAAML,EAAYK,EAAWC,OACzB,0BACA,kBACEC,EAAQF,EAAWC,OACrB,CAAEE,gBAAiB,UAAWC,OAAQ,WACtC,CAAED,gBAAiB,UAAWC,OAAQ,WAC1C,OACE,wBAAClC,EAAD,2BACMqB,EAAuBS,EAAY,CACrCL,YACAO,WAHJ,IAKEG,IAAKL,EAAWM,QAEhB,+BAAON,EAAWO,+B,GApDJC,IAAMC,W,obCPjC,IAAMC,EAAelD,IAAOW,IAAV,KAIrB,SAACT,GAAD,OAAWA,EAAMiD,SAAW,iCAM1B,SAACjD,GAAD,OAAWA,EAAMiD,SAAW,iCAO5B,SAACjD,GAAD,OAAWA,EAAMiD,SAAW,iCAO5B,SAACjD,GAAD,OAAWA,EAAMiD,SAAW,iCCgFnBC,EAtGH,SAAClD,GACX,IAAMmD,EAAe,CACnBC,KAAMpD,EAAMY,QACZyC,IAAKC,WAAWtD,EAAMqD,KACtBE,IAAKD,WAAWtD,EAAMuD,KACtBC,KAAMxD,EAAMwD,MALO,EAQKC,mBAASN,GARd,mBAQd/B,EARc,KAUfsC,GAVe,KAUN,CACbL,IAAKjC,EAAMiC,IACXE,IAAKnC,EAAMmC,MAGPC,EAAOG,SAASvC,EAAMoC,MAmCtBI,EAAc,SAACvB,EAAKwB,EAAMC,GAE9B,IAAMC,EAnBa,SAAC1B,EAAKwB,EAAMC,GAC/B,IAAMC,EAAS,IAAIF,EAAKG,aAKxB,OAHAF,EAAOG,SAAQ,SAACC,GACdH,EAAOI,OAAO,IAAIN,EAAKO,OAAOF,EAAMb,IAAKa,EAAMX,SAE1CQ,EAaQM,CAAahC,EAAKwB,EAAMC,GAEvCzB,EAAIiC,UAAUP,GAZW,SAAC1B,EAAKwB,EAAME,GACrCF,EAAKU,MAAMC,mBAAmBnC,EAAK,QAAQ,WACzCwB,EAAKU,MAAME,eAAeC,OAAQ,UAAU,WAC1CrC,EAAIiC,UAAUP,SAWlBY,CAAmBtC,EAAKwB,EAAME,IA0BhC,OACE,cAACf,EAAD,CAAcC,QAASjD,EAAMiD,QAA7B,SACE,cAAC,IAAD,CAEE2B,iBAAiB,0CACjBC,cAAenB,EACfoB,YAAatB,EACbuB,QAxEgB,SAAClB,GACrB,MAAO,CACLmB,kBAAkB,EAClBC,gBAAgB,EAChBC,mBAAmB,EACnBC,UAAW,YACXC,OAAQ,CACN,CACEC,YAAa,MACbC,YAAa,SACbC,QAAS,CAAC,CAAEC,WAAY,WA+D1BC,oCAAkC,EAClCC,kBAAmB,YAAoB,IAAjBrD,EAAgB,EAAhBA,IAAKwB,EAAW,EAAXA,KACzB7D,EAAM2F,UACH3F,EAAM4F,wBACPhC,EAAYvB,EAAKwB,EAAM7D,EAAM6F,sBAnCjB,SAACxD,EAAKwB,GAC1B,GAAsB,qBAAlB7D,EAAM8F,QACR9F,EAAM6F,qBAAqB5B,SAAQ,SAAC8B,GAErB,IAAIlC,EAAKmC,OAAO,CAC3BC,SAAUF,EACV1D,eAIJ,KAAM4D,EAAW,CACf5C,IAAKjC,EAAMiC,IACXE,IAAKnC,EAAMmC,KAIA,IAAIM,EAAKmC,OAAO,CAC3BC,SAAUA,EACV5D,SAkBE6D,CAAc7D,EAAKwB,KAVhBzC,EAAMgC,SCvFb+C,EAActH,IAAMC,OAAO,CAC/BC,QAAQ,GAAD,OAAKC,2CAAL,QACPC,iBAAiB,IAGbC,EAAe,SAACC,GACpB,MAAMA,GAIO,EAUL,SAACiH,GACP,OAAOD,EACJ9G,KAAK,UAAW+G,GAChB9G,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,MAAMP,IAdE,EAiBH,WACR,OAAOiH,EACJzG,IAAI,aACJJ,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,MAAMP,IArBE,EAwBN,SAACkH,GACN,OAAOD,EACJ9G,KAAK,SAAU+G,GACf9G,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,MAAMP,IA5BE,EA+BL,WAEN,OADAmH,aAAaC,WAAW,gBACjBH,EACJ9G,KAAK,UAAW,IAChBC,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,MAAMP,I,i/CC9Cb,IAAMqH,GAAgBC,YAAH,KAKNC,GAAa3G,IAAOW,IAAV,IAGR8F,IAGFG,GAAQ5G,IAAO6G,EAAV,KAeLC,GAAY9G,IAAO+G,KAAV,KAQTC,GAAUhH,IAAO6G,EAAV,KAaPrG,GAAQR,IAAOS,MAAV,KAULwG,GAAWjH,IAAOkH,SAAV,KC2FNC,GAjIF,SAACjH,GACZ,IAAMmD,EAAenD,EAAMkH,SACvB,CAAEC,SAAU,GAAIC,SAAU,IAC1B,CAAEhE,KAAM,GAAIP,YAAa,GAAIqB,MAAO,MAHlB,EAIYT,mBAAS,MAJrB,mBAIf4D,EAJe,KAIJC,EAJI,OAKY7D,mBAASN,GALrB,mBAKfoE,EALe,KAKJC,EALI,KAqChB7G,EAAe,SAAC4D,GAAW,IAAD,EACNA,EAAMkD,OAAtBrE,EADsB,EACtBA,KAAM7B,EADgB,EAChBA,MACdiG,GAAa,SAACpG,GAAD,mBAAC,eACTA,GADQ,kBAEVgC,EAAO7B,QAeNmG,EAAS1H,EAAM0H,OAAOrF,KAAI,SAACsF,GAC/B,MAAuB,UAAhBA,EAAMpH,MACX,eAAC,IAAMwB,SAAP,WACE,gCAAQ4F,EAAMC,QACd,cAAC,GAAD,CACEC,KAAMF,EAAME,KACZzE,KAAMuE,EAAMvE,KACZ7B,MAAOgG,EAAUI,EAAMvE,MACvBpB,YAAa2F,EAAM3F,YACnBP,SAAUd,MAPOgH,EAAMvE,MAW3B,eAAC,IAAMrB,SAAP,WACE,gCAAQ4F,EAAMC,QACd,cAACb,GAAD,CACEc,KAAMF,EAAME,KACZzE,KAAMuE,EAAMvE,KACZ7B,MAAOgG,EAAUI,EAAMvE,MACvBpB,YAAa2F,EAAM3F,YACnBP,SAAUd,MAPOgH,EAAMvE,SAa/B,OACE,eAACqD,GAAD,WACE,eAACG,GAAD,CAAWkB,SAAU,SAACvD,GAAD,OA7EA,SAACA,EAAOwD,GAC/BxD,EAAMyD,kBACiBhI,EAAMiI,MACzBC,EAAmBH,GACnB/H,EAAMmI,OACND,EAAoBH,GACpBnJ,EAAmCmJ,IAGpCzI,MAAK,SAACC,GACDS,EAAMoI,iBACR9G,QAAQ+G,IAAI,+BAAgC9I,GAC5CS,EAAMsI,kBACNtI,EAAMuI,gCAENlC,aAAamC,QAAQ,eAAgBC,KAAKC,UAAUnJ,IACpDS,EAAM2I,QAAQpJ,GACdS,EAAM4I,QAAQC,KAAK,SAGtBpJ,OAAM,SAAC4B,GACNC,QAAQ+G,IACNrI,EAAMoI,gBACF,2BACA,uCAENd,EAAajG,EAAM9B,SAASC,KAAKsJ,YAmDHC,CAAiBxE,EAAOgD,IAAxD,UACE,6BACGvH,EAAMiI,MACH,QACAjI,EAAMmI,OACN,SACA,uBAELT,EACA1H,EAAMoI,iBACL,eAAC,IAAMrG,SAAP,WACE,mDACA,cAAC,EAAD,CAAqBZ,SAnDd,SAAC6H,GAChBxB,GAAa,SAACpG,GAAD,mBAAC,eACTA,GADQ,IAEX8C,MAAO,CACLtD,QAASoI,EAASpI,QAClByC,IAAKC,WAAW0F,EAAS3F,KACzBE,IAAKD,WAAW0F,EAASzF,cA8CpBgE,EAAUrD,OACT,eAAC,IAAMnC,SAAP,WACE,4DACA,cAAC,EAAD,CACEkB,SAAO,EAEPrC,QAAS2G,EAAUrD,MAAMtD,QACzByC,IAAKkE,EAAUrD,MAAMb,IACrBE,IAAKgE,EAAUrD,MAAMX,IACrBC,KAAK,MAJA+D,EAAUrD,MAAMtD,eAW/B,cAAC,EAAD,CACEiH,KAAK,SACLxH,KAAML,EAAMiI,MAAQ,QAAUjI,EAAMmI,OAAS,UAAY,QAE1Dd,GAAa,cAACX,GAAD,UAAQW,QAEtBrH,EAAMiI,OAASjI,EAAMmI,SACrB,eAACrB,GAAD,CAAStE,MAAO,CAAEyG,UAAW,UAA7B,UACGjJ,EAAMkJ,YACP,cAAC,IAAD,CAAMC,GAAE,UAAKnJ,EAAMoJ,kBAAnB,SAAwCpJ,EAAMqJ,0BCvHzCC,GArBI,SAACtJ,GAkBlB,OAAO,cAAC,GAAD,yBAAMoI,iBAAe,GAAKpI,GAA1B,IAAiC0H,OAjBd,CACxB,CACEtE,KAAM,OACNwE,MAAO,OACPC,KAAM,OACN7F,YAAa,8BACbzB,MAAO,SAET,CACE6C,KAAM,cACNwE,MAAO,cACPC,KAAM,OACN7F,YAAa,+CACbzB,MAAO,iB,8kCCfN,IAAMgJ,GAAsBzJ,IAAO0J,GAAV,MAWnBC,GAAY3J,IAAOW,IAAV,MAgBTiJ,GAAc5J,IAAOW,IAAV,MCoBTkJ,GA3CO,SAAC3J,GAarB,OACE,cAACuJ,GAAD,UACE,eAACE,GAAD,WACE,cAAC,EAAD,CAEE7I,QAASZ,EAAMkE,MAAMA,MAAMtD,QAC3ByC,IAAKC,WAAWtD,EAAMkE,MAAMA,MAAMb,KAClCE,IAAKD,WAAWtD,EAAMkE,MAAMA,MAAMX,KAClCC,KAAK,MAJAxD,EAAMkE,MAAMA,MAAMtD,SAMzB,eAAC8I,GAAD,WACE,6BAAK1J,EAAMkE,MAAMd,OACjB,4BAAIpD,EAAMkE,MAAMrB,aAAe7C,EAAMkE,MAAMrB,cAC3C,gCACE,oBAAGZ,UAAU,SAAb,kBACQqB,WAAWtD,EAAMkE,MAAMA,MAAMb,KAAKuG,QAAQ,MAElD,sCAAStG,WAAWtD,EAAMkE,MAAMA,MAAMX,KAAKqG,QAAQ,SAErD,cAAC,EAAD,CACEC,QAAS7J,EAAMkE,MAAM4F,IACrB1J,YAAa,kBAjCMT,EAiCoBK,EAAMkE,MAAM4F,SAhC3DC,EACepK,GACZL,MAAK,SAACC,GACL+B,QAAQ+G,IAAI,iBAAkB9I,GAC9BS,EAAMuI,iCAEP9I,OAAM,SAACN,GACNmC,QAAQ+G,IAAI,0CARU,IAAC1I,GAkCnBU,KAAK,oB,miBCvCjB,IAAM2J,GAAUxD,YAAH,MAKAyD,GAAUnK,IAAOW,IAAV,KAKLuJ,IAGFE,GAAiBpK,IAAOW,IAAV,MAKd0J,GAA8BrK,IAAOsK,GAAV,MC0EzBC,GAtFE,SAACrK,GAAW,IAAD,EACYyD,oBAAS,GADrB,mBACnB6G,EADmB,KACNC,EADM,OAEkB9G,mBAAS,IAF3B,mBAEnB+G,EAFmB,KAEHC,EAFG,KAY1BC,qBAAU,WACJ1K,EAAM2K,eACRZ,EACqB,CAAEa,OAAQ5K,EAAM2K,cAAcxD,WAChD7H,MAAK,SAACC,GACLkL,EAAkBlL,MAEnBE,OAAM,SAACN,GACNmC,QAAQ+G,IAAI,4CAGjB,CAACrI,EAAM2K,gBAEV,IAAME,EAAwB,WAC5Bd,EACqB,CAAEa,OAAQ5K,EAAM2K,cAAcxD,WAChD7H,MAAK,SAACC,GACLkL,EAAkBlL,MAEnBE,OAAM,SAACN,GACNmC,QAAQ+G,IAAI,2CAIZyC,EAAqBN,EAAenI,KAAI,SAAC6B,GAC7C,OACE,cAAC,GAAD,CAEEA,MAAOA,EACPqE,4BAA6BsC,GAFxB3G,EAAM4F,QAOjB,OACE,cAACI,GAAD,UACGlK,EAAM2K,cACL,qCACE,qCAAQ3K,EAAM2K,cAAcxD,SAA5B,QACA,cAAC,EAAD,CACE/G,YAhDS,WACjBmK,GAAgBD,IAgDRjK,KAAMiK,EAAc,QAAU,6BAE/BE,EAAeO,OAAS,GACvB,0EAEDT,GACC,cAAC,GAAD,CACEK,cAAe3K,EAAM2K,cACrBrC,gBArDM,WAChBiC,GAAe,IAqDLhC,4BAA6BsC,IAGhCL,GACC,cAACL,GAAD,UACGW,OAKP,eAACb,GAAD,WACE,8DACA,cAAC,IAAD,CAAMd,GAAG,QAAT,SACE,cAAC,EAAD,CAAQ9I,KAAK,YAEf,cAAC,IAAD,CAAM8I,GAAG,SAAT,SACE,cAAC,EAAD,CAAQ9I,KAAK,oB,unCCpFlB,IAAM2K,GAAelL,IAAOW,IAAV,MAaZwK,GAAQnL,IAAOoL,IAAV,MAsBLC,GAASrL,IAAOW,IAAV,MCAJ2K,GA7BA,SAACpL,GACd,IADwB,EAEEyD,mBADL,CAAE4H,aAAc,OADb,mBAEjBjK,EAFiB,KAEVP,EAFU,KAIxB6J,qBAAU,WACR7J,EAAS,CAAEwK,aAAcrL,EAAM2K,kBAC9B,CAAC3K,EAAM2K,gBASV,OACE,eAACK,GAAD,WACE,cAAC,IAAD,CAAM7B,GAAG,IAAT,SACE,cAAC8B,GAAD,CAAOK,IAAG,UApBCtM,GAoBD,mBAAkCuM,IAAI,YAEjDnK,EAAMiK,cACL,cAACF,GAAD,UACE,cAAC,IAAD,CAAiBjJ,KAAMsJ,IAAcrL,QAd1B,WACjB+H,IAAsB5I,MAAK,WACzBuB,EAAS,CAAEwK,aAAc,OACzBrL,EAAM2I,QAAQ,kBCKL8C,GArBE,SAACzL,GAkBhB,OAAO,cAAC,GAAD,yBAAMkH,UAAQ,GAAKlH,GAAnB,IAA0B0H,OAjBd,CACjB,CACEtE,KAAM,WACNwE,MAAO,WACPC,KAAM,OACN7F,YAAa,sBACbzB,MAAO,SAET,CACE6C,KAAM,WACNwE,MAAO,WACPC,KAAM,WACN7F,YAAa,SACbzB,MAAO,c,QC+FEmL,GAzGH,WACV,IAAMvI,EAAe,CACnBkI,aAAc5C,KAAKkD,MAAMtF,aAAauF,QAAQ,kBAAoB,MAFpD,EAIUnI,mBAASN,GAJnB,mBAIT/B,EAJS,KAIFP,EAJE,KAMVgL,EAAa,SAACC,GAClBjL,EAAS,CACPwK,aAAcS,KAIlBpB,qBAAU,WAEqB,OAAvBtJ,EAAMiK,cACRnD,IAEG5I,MAAK,SAACC,GACL8G,aAAamC,QAAQ,eAAgBC,KAAKC,UAAUnJ,IACpDsB,EAAS,CACPwK,aAAc9L,OAGjBE,OAAM,SAACN,GACN0B,EAAS,CACPwK,cAAc,SAMvB,CAACjK,EAAMiK,eAEV,IAAMU,EAAmB,WACvB7D,IAEG5I,MAAK,SAACC,GACLsB,EAAS,CACPwK,aAAc9L,OAGjBE,OAAM,SAACN,GACN0B,EAAS,CACPwK,cAAc,QAKtB,OACE,gCACE,cAAC,GAAD,CACEV,cAAevJ,EAAMiK,aACrB1C,QAASkD,EACTG,WAAYD,IAEd,eAAC,KAAD,WACE,cAAC,KAAD,CACEE,OAAK,EACLC,KAAK,IACLC,OAAQ,SAACnM,GAAD,OACN,cAAC,GAAD,2BACMA,GADN,IAEE2K,cAAevJ,EAAMiK,aACrB1C,QAASkD,EACTG,WAAYD,QAIlB,cAAC,KAAD,CACEE,OAAK,EACLC,KAAK,SACLC,OAAQ,SAACnM,GAAD,OACN,cAAC,GAAD,2BACMA,GADN,IAEEiI,OAAK,EACL0C,cAAevJ,EAAMiK,aACrB1C,QAASkD,EACTG,WAAYD,EACZ7C,YAAY,+BACZE,iBAAiB,UACjBC,iBAAiB,iBAIvB,cAAC,KAAD,CACE4C,OAAK,EACLC,KAAK,UACLC,OAAQ,SAACnM,GAAD,OACN,cAAC,GAAD,2BACMA,GADN,IAEEmI,QAAM,EACNwC,cAAevJ,EAAMiK,aACrB1C,QAASkD,EACTG,WAAYD,EACZ7C,YAAY,4BACZE,iBAAiB,SACjBC,iBAAiB,sBCjG/B+C,IAASD,OACP,cAAC,IAAD,UACE,cAAC,IAAME,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.479257e9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst favoritePlaceServices = axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}/api`,\n  withCredentials: true,\n});\n\nconst errorHandler = (err) => {\n  throw err;\n};\n\n// eslint-disable-next-line\nexport default {\n  favoritePlaceServices,\n\n  postNewPlace: (formFields) => {\n    return favoritePlaceServices\n      .post(\"/newPlace\", formFields)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  getFavoritePlaces: () => {\n    return favoritePlaceServices\n      .get(\"/favoritePlaces\")\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  deletePlace: (id) => {\n    return favoritePlaceServices\n      .delete(`/favoritePlaces/${id}`)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n};\n","import styled from \"styled-components\";\n\nexport const ButtonStyled = styled.button`\n  padding: 14px 20px 12px;\n  margin: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-family: \"Comfortaa\", cursive;\n\n  &:hover {\n    cursor: pointer;\n    background-color: lightsteelblue;\n  }\n\n  ${(props) =>\n    props.descriptionButton &&\n    `\n    margin: 30px 0;\n\n    @media (max-width: 667px) {\n    margin: 20px 0 10px;\n  }\n  `}\n`;\n","import React from \"react\";\nimport { ButtonStyled } from \"./styles\";\n\nconst Button = (props) => {\n  const liftClick = () => {\n    props.handleClick && props.handleClick();\n  };\n\n  return (\n    <ButtonStyled\n      descriptionButton={props.descriptionButton}\n      onClick={liftClick}\n    >\n      {props.text}\n    </ButtonStyled>\n  );\n};\n\nexport default Button;\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n\n  &.btn {\n    &:hover {\n      cursor: pointer;\n      background-color: lightsteelblue;\n    }\n  }\n`;\n\nexport const PlaceSuggestion = styled.div`\n  width: 100%;\n  padding: 8px 20px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n","import React from \"react\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport { Input, PlaceSuggestion } from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: \"\" };\n  }\n\n  handleChange = (address) => {\n    this.setState({ address });\n  };\n\n  handleSelect = (address) => {\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => {\n        this.setState({ address: address, ...latLng });\n        this.props.setPlace(this.state);\n      })\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <React.Fragment>\n            <Input\n              {...getInputProps({\n                placeholder: \"Search Places ...\",\n                className: \"location-search-input\",\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <FontAwesomeIcon icon={faSpinner} size=\"2x\" />}\n              {suggestions.map((suggestion) => {\n                const className = suggestion.active\n                  ? \"suggestion-item--active\"\n                  : \"suggestion-item\";\n                const style = suggestion.active\n                  ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                  : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                return (\n                  <PlaceSuggestion\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                    key={suggestion.index}\n                  >\n                    <span>{suggestion.description}</span>\n                  </PlaceSuggestion>\n                );\n              })}\n            </div>\n          </React.Fragment>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n\nexport default LocationSearchInput;\n\n// Copyright (c) 2016-present, Ken Hibino\n// See https://kenny-hibino.github.io/react-places-autocomplete\n","import styled from \"styled-components\";\n\nexport const MapContainer = styled.div`\n  width: 500px;\n  height: 334px;\n\n  ${(props) => props.formMap && \"width: 100%; height: 300px;\"};\n\n  @media (max-width: 667px) {\n    width: 100%;\n    height: 300px;\n\n    ${(props) => props.formMap && \"width: 100%; height: 300px;\"};\n  }\n\n  @media (min-width: 667px) and (max-width: 768px) {\n    width: 350px;\n    height: 234px;\n\n    ${(props) => props.formMap && \"width: 100%; height: 300px;\"};\n  }\n\n  @media (min-width: 768px) and (max-width: 992px) {\n    width: 400px;\n    height: 267px;\n\n    ${(props) => props.formMap && \"width: 100%; height: 300px;\"};\n  }\n`;\n","import React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { MapContainer } from \"./styles\";\n\nconst Map = (props) => {\n  const initialState = {\n    name: props.address,\n    lat: parseFloat(props.lat),\n    lng: parseFloat(props.lng),\n    zoom: props.zoom,\n  };\n  // eslint-disable-next-line\n  const [state, setState] = useState(initialState);\n\n  const center = {\n    lat: state.lat,\n    lng: state.lng,\n  };\n\n  const zoom = parseInt(state.zoom);\n\n  const getMapOptions = (maps) => {\n    return {\n      disableDefaultUI: false,\n      mapTypeControl: true,\n      streetViewControl: true,\n      mapTypeId: \"satellite\",\n      styles: [\n        {\n          featureType: \"poi\",\n          elementType: \"labels\",\n          stylers: [{ visibility: \"on\" }],\n        },\n      ],\n    };\n  };\n\n  const getMapBounds = (map, maps, places) => {\n    const bounds = new maps.LatLngBounds();\n\n    places.forEach((place) => {\n      bounds.extend(new maps.LatLng(place.lat, place.lng));\n    });\n    return bounds;\n  };\n\n  const bindResizeListener = (map, maps, bounds) => {\n    maps.event.addDomListenerOnce(map, \"idle\", () => {\n      maps.event.addDomListener(window, \"resize\", () => {\n        map.fitBounds(bounds);\n      });\n    });\n  };\n\n  const apiIsLoaded = (map, maps, places) => {\n    // Get bounds by our places\n    const bounds = getMapBounds(map, maps, places);\n    // Fit map to bounds\n    map.fitBounds(bounds);\n    // Bind the resize listener\n    bindResizeListener(map, maps, bounds);\n  };\n\n  const renderMarkers = (map, maps) => {\n    if (props.mapType === \"tripPresentation\") {\n      props.allExperiencesCoords.forEach((coord) => {\n        // eslint-disable-next-line\n        let marker = new maps.Marker({\n          position: coord,\n          map,\n        });\n      });\n    } else {\n      const position = {\n        lat: state.lat,\n        lng: state.lng,\n      };\n\n      // eslint-disable-next-line\n      let marker = new maps.Marker({\n        position: position,\n        map,\n      });\n    }\n  };\n\n  return (\n    <MapContainer formMap={props.formMap}>\n      <GoogleMapReact\n        key={state.name}\n        bootstrapURLKeys=\"AIzaSyC5R2OYlhvGRMmpofdkJ0jL60Tsa7dtZUY\"\n        defaultCenter={center}\n        defaultZoom={zoom}\n        options={getMapOptions}\n        yesIWantToUseGoogleMapApiInternals\n        onGoogleApiLoaded={({ map, maps }) => {\n          props.tripMap &&\n            !props.hasOnlyOneLocalisation &&\n            apiIsLoaded(map, maps, props.allExperiencesCoords);\n          renderMarkers(map, maps);\n        }}\n      />\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import axios from \"axios\";\n\nconst authService = axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}/api`,\n  withCredentials: true,\n});\n\nconst errorHandler = (err) => {\n  throw err;\n};\n\n// eslint-disable-next-line\nexport default {\n  authService,\n\n  getUser: (userId) => {\n    return authService\n      .get(`/getUser/${userId}`)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  signup: (credentials) => {\n    return authService\n      .post(\"/signup\", credentials)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  loggedIn: () => {\n    return authService\n      .get(\"/loggedIn\")\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  login: (credentials) => {\n    return authService\n      .post(\"/login\", credentials)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  logout: () => {\n    localStorage.removeItem(\"loggedInUser\");\n    return authService\n      .post(\"/logout\", {})\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  toggleAddToFavorites: (id) => {\n    return authService\n      .put(`/toggleAddToFavorites/${id}`)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n};\n","import styled, { keyframes } from \"styled-components\";\n\nconst slowlyAppears = keyframes`\n  0%   {opacity: 0;}\n  100% {opacity: 1;}\n`;\n\nexport const StyledForm = styled.div`\n  text-align: center;\n  color: black;\n  animation: ${slowlyAppears} 0.5s;\n`;\n\nexport const Error = styled.p`\n  color: black;\n  border: solid red 1px;\n  border-radius: 4px;\n  max-width: 350px;\n  padding: 10px 20px;\n  box-sizing: border-box;\n  background-color: rgba(241, 169, 160, 0.15);\n\n  @media (min-width: 768px) {\n    width: 350px;\n    margin: 10px auto 0;\n  }\n`;\n\nexport const FormInner = styled.form`\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  padding: 20px;\n  margin: 20px auto;\n  max-width: 350px;\n`;\n\nexport const Message = styled.p`\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  padding: 10px 20px;\n  margin: 20px auto;\n  max-width: 350px;\n\n  a {\n    text-decoration: none;\n    color: blue;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  height: 100px;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  resize: none;\n`;\n","import React, { useState } from \"react\";\nimport Button from \"../Button/Button\";\n\n// Create\nimport LocationSearchInput from \"../../LocationSearchInput/LocationSearchInput\";\nimport Map from \"../../Map/Map\";\nimport favoritePlaceServices from \"../../../Services/favorite-place-service\";\n\n// Auth\nimport { Link } from \"react-router-dom\";\nimport authServices from \"../../../Services/auth-services\";\n\nimport {\n  StyledForm, //Change\n  Error,\n  FormInner,\n  Input,\n  Message, // Auth\n  Textarea, // Create\n} from \"./styles\";\n\nconst Form = (props) => {\n  const initialState = props.authForm\n    ? { username: \"\", password: \"\" }\n    : { name: \"\", description: \"\", place: null };\n  const [showError, setShowError] = useState(null);\n  const [formState, setFormState] = useState(initialState);\n\n  const handleFormSubmit = (event, formObject) => {\n    event.preventDefault();\n    const dynamicService = props.login\n      ? authServices.login(formObject)\n      : props.signup\n      ? authServices.signup(formObject)\n      : favoritePlaceServices.postNewPlace(formObject);\n\n    dynamicService\n      .then((response) => {\n        if (props.createPlaceForm) {\n          console.log(\"New favorite place created :\", response);\n          props.handleCloseForm();\n          props.handleRefreshFavoritePlaces();\n        } else {\n          localStorage.setItem(\"loggedInUser\", JSON.stringify(response));\n          props.getUser(response);\n          props.history.push(\"/\");\n        }\n      })\n      .catch((error) => {\n        console.log(\n          props.createPlaceForm\n            ? \"Error while login/signup\"\n            : \"Error creating a new favorite place\"\n        );\n        setShowError(error.response.data.message);\n      });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const setPlace = (newPlace) => {\n    setFormState((state) => ({\n      ...state,\n      place: {\n        address: newPlace.address,\n        lat: parseFloat(newPlace.lat),\n        lng: parseFloat(newPlace.lng),\n      },\n    }));\n  };\n\n  const fields = props.fields.map((field) => {\n    return field.input === \"input\" ? (\n      <React.Fragment key={field.name}>\n        <label>{field.label}</label>\n        <Input\n          type={field.type}\n          name={field.name}\n          value={formState[field.name]}\n          placeholder={field.placeholder}\n          onChange={handleChange}\n        />\n      </React.Fragment>\n    ) : (\n      <React.Fragment key={field.name}>\n        <label>{field.label}</label>\n        <Textarea\n          type={field.type}\n          name={field.name}\n          value={formState[field.name]}\n          placeholder={field.placeholder}\n          onChange={handleChange}\n        />\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <StyledForm>\n      <FormInner onSubmit={(event) => handleFormSubmit(event, formState)}>\n        <h3>\n          {props.login\n            ? \"LOGIN\"\n            : props.signup\n            ? \"SIGNUP\"\n            : \"NEW FAVORITE PLACE\"}\n        </h3>\n        {fields}\n        {props.createPlaceForm && (\n          <React.Fragment>\n            <label>Find the place</label>\n            <LocationSearchInput setPlace={setPlace} />\n            {formState.place && (\n              <React.Fragment>\n                <p>Is this the correct place ?</p>\n                <Map\n                  formMap\n                  key={formState.place.address}\n                  address={formState.place.address}\n                  lat={formState.place.lat}\n                  lng={formState.place.lng}\n                  zoom=\"14\"\n                />\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n\n        <Button\n          type=\"submit\"\n          text={props.login ? \"LOGIN\" : props.signup ? \"SIGN UP\" : \"ADD\"}\n        />\n        {showError && <Error>{showError}</Error>}\n      </FormInner>\n      {(props.login || props.signup) && (\n        <Message style={{ textAlign: \"center\" }}>\n          {props.authMessage}\n          <Link to={`${props.formRedirectLink}`}>{props.formRedirectText}</Link>\n        </Message>\n      )}\n    </StyledForm>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport Form from \"../ElementalComponents/Form/Form\";\n\nconst CreateForm = (props) => {\n  const createPlaceFields = [\n    {\n      name: \"name\",\n      label: \"Name\",\n      type: \"text\",\n      placeholder: \"Ex: 'Parc de la Ciutadella'\",\n      input: \"input\",\n    },\n    {\n      name: \"description\",\n      label: \"Description\",\n      type: \"text\",\n      placeholder: \"Ex: 'A nice park in the center of Barcelona.\",\n      input: \"textarea\",\n    },\n  ];\n\n  return <Form createPlaceForm {...props} fields={createPlaceFields} />;\n};\n\nexport default CreateForm;\n","import styled from \"styled-components\";\n\nexport const StyledFavoritePlace = styled.li`\n  list-style: none;\n  margin: 30px auto;\n\n  h2 {\n    @media (min-width: 667px) and (max-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const Container = styled.div`\n  margin: 0 40px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.4);\n  border-radius: 5px;\n  padding: 10px;\n\n  @media (max-width: 667px) {\n    flex-direction: column;\n    margin: 0 auto;\n  }\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  margin-left: 100px;\n  width: 250px;\n  text-align: left;\n\n  @media (max-width: 667px) {\n    align-items: center;\n    margin-left: 0;\n  }\n\n  @media (min-width: 667px) and (max-width: 768px) {\n    width: 200px;\n    margin-left: 50px;\n  }\n\n  @media (min-width: 768px) and (max-width: 992px) {\n    width: 225px;\n    margin-left: 80px;\n  }\n`;\n","import React from \"react\";\nimport { StyledFavoritePlace, Description, Container } from \"./styles\";\nimport favoritePlaceService from \"../../Services/favorite-place-service\";\nimport Map from \"../Map/Map\";\nimport Button from \"../ElementalComponents/Button/Button\";\n\nconst FavoritePlace = (props) => {\n  const deleteFavoritePlace = (id) => {\n    favoritePlaceService\n      .deletePlace(id)\n      .then((response) => {\n        console.log(\"Place deleted:\", response);\n        props.handleRefreshFavoritePlaces();\n      })\n      .catch((err) => {\n        console.log(\"Error while deleting favorite place\");\n      });\n  };\n\n  return (\n    <StyledFavoritePlace>\n      <Container>\n        <Map\n          key={props.place.place.address}\n          address={props.place.place.address}\n          lat={parseFloat(props.place.place.lat)}\n          lng={parseFloat(props.place.place.lng)}\n          zoom=\"14\"\n        />\n        <Description>\n          <h2>{props.place.name}</h2>\n          <p>{props.place.description && props.place.description}</p>\n          <div>\n            <p className=\"coords\">\n              Lat: {parseFloat(props.place.place.lat).toFixed(4)}\n            </p>\n            <p>Lon: {parseFloat(props.place.place.lng).toFixed(4)}</p>\n          </div>\n          <Button\n            placeId={props.place._id}\n            handleClick={() => deleteFavoritePlace(props.place._id)}\n            text=\"DELETE\"\n          />\n        </Description>\n      </Container>\n    </StyledFavoritePlace>\n  );\n};\n\nexport default FavoritePlace;\n","import styled, { keyframes } from \"styled-components\";\n\nconst slideup = keyframes`\n  0%   {opacity: 0; top: 50%;}\n  100% {opacity: 1; top: 40%;}\n`;\n\nexport const Visitor = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation: ${slideup} 1s;\n`;\n\nexport const StyledHomepage = styled.div`\n  text-align: center;\n  padding-bottom: 20px;\n`;\n\nexport const FavoritePlacesListContainer = styled.ul`\n  margin: 0 20px;\n  padding: 0;\n`;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport favoritePlaceService from \"../../Services/favorite-place-service\";\nimport CreateForm from \"../CreateForm/CreateForm\";\nimport Button from \"../ElementalComponents/Button/Button\";\nimport FavoritePlace from \"../FavoritePlace/FavoritePlace\";\nimport { StyledHomepage, FavoritePlacesListContainer, Visitor } from \"./styles\";\n\nconst Homepage = (props) => {\n  const [displayForm, setDisplayForm] = useState(false);\n  const [favoritePlaces, setFavoritePlaces] = useState([]);\n\n  const toggleForm = () => {\n    setDisplayForm(!displayForm);\n  };\n\n  const closeForm = () => {\n    setDisplayForm(false);\n  };\n\n  useEffect(() => {\n    if (props.userInSession) {\n      favoritePlaceService\n        .getFavoritePlaces({ author: props.userInSession.username })\n        .then((response) => {\n          setFavoritePlaces(response);\n        })\n        .catch((err) => {\n          console.log(\"Error while getting favorite places\");\n        });\n    }\n  }, [props.userInSession]);\n\n  const refreshFavoritePlaces = () => {\n    favoritePlaceService\n      .getFavoritePlaces({ author: props.userInSession.username })\n      .then((response) => {\n        setFavoritePlaces(response);\n      })\n      .catch((err) => {\n        console.log(\"Error while getting favorite places\");\n      });\n  };\n\n  const favoritePlacesList = favoritePlaces.map((place) => {\n    return (\n      <FavoritePlace\n        key={place._id}\n        place={place}\n        handleRefreshFavoritePlaces={refreshFavoritePlaces}\n      />\n    );\n  });\n\n  return (\n    <StyledHomepage>\n      {props.userInSession ? (\n        <>\n          <h1>Hi {props.userInSession.username} !</h1>\n          <Button\n            handleClick={toggleForm}\n            text={displayForm ? \"CLOSE\" : \"ADD A NEW FAVORITE PLACE\"}\n          />\n          {favoritePlaces.length > 0 && (\n            <h2>Here is a list of your favorite places :</h2>\n          )}\n          {displayForm && (\n            <CreateForm\n              userInSession={props.userInSession}\n              handleCloseForm={closeForm}\n              handleRefreshFavoritePlaces={refreshFavoritePlaces}\n            />\n          )}\n          {favoritePlaces && (\n            <FavoritePlacesListContainer>\n              {favoritePlacesList}\n            </FavoritePlacesListContainer>\n          )}\n        </>\n      ) : (\n        <Visitor>\n          <h1>Welcome to myFavoritePlaces!</h1>\n          <Link to=\"login\">\n            <Button text=\"LOGIN\" />\n          </Link>\n          <Link to=\"signup\">\n            <Button text=\"SIGN UP\" />\n          </Link>\n        </Visitor>\n      )}\n    </StyledHomepage>\n  );\n};\n\nexport default Homepage;\n","import styled from \"styled-components\";\n\nexport const StyledNavbar = styled.div`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  top: 0;\n  height: 50px;\n  margin-bottom: 100px;\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport const Brand = styled.img`\n  margin-top: 40px;\n  width: 350px;\n\n  @media (max-width: 400px) {\n    width: 175px;\n  }\n\n  @media (min-width: 400px) and (max-width: 500px) {\n    width: 225px;\n  }\n\n  @media (min-width: 500px) and (max-width: 768px) {\n    width: 275px;\n  }\n\n  @media (min-width: 768px) and (max-width: 992px) {\n    margin-top: 40px;\n    width: 325px;\n  }\n`;\n\nexport const Logout = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 40px;\n  font-size: 34px;\n  cursor: pointer;\n\n  @media (max-width: 400px) {\n    font-size: 20px;\n  }\n\n  @media (min-width: 400px) and (max-width: 500px) {\n    font-size: 24px;\n  }\n\n  @media (min-width: 500px) and (max-width: 768px) {\n    font-size: 28px;\n  }\n\n  @media (min-width: 768px) and (max-width: 992px) {\n    font-size: 32px;\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport authServices from \"../../Services/auth-services\";\nimport { StyledNavbar, Brand, Logout } from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nconst publicPath = process.env.PUBLIC_URL;\n\nconst Navbar = (props) => {\n  const initialState = { loggedInUser: null };\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState({ loggedInUser: props.userInSession });\n  }, [props.userInSession]);\n\n  const logoutUser = () => {\n    authServices.logout().then(() => {\n      setState({ loggedInUser: null });\n      props.getUser(null);\n    });\n  };\n\n  return (\n    <StyledNavbar>\n      <Link to=\"/\">\n        <Brand src={`${publicPath}/logo_white.png`} alt=\"Brand\" />\n      </Link>\n      {state.loggedInUser && (\n        <Logout>\n          <FontAwesomeIcon icon={faSignOutAlt} onClick={logoutUser} />\n        </Logout>\n      )}\n    </StyledNavbar>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport Form from \"../ElementalComponents/Form/Form\";\n\nconst AuthForm = (props) => {\n  const authFields = [\n    {\n      name: \"username\",\n      label: \"Username\",\n      type: \"text\",\n      placeholder: \"Enter your username\",\n      input: \"input\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      placeholder: \"******\",\n      input: \"input\",\n    },\n  ];\n\n  return <Form authForm {...props} fields={authFields} />;\n};\n\nexport default AuthForm;\n","import Homepage from \"./components/Homepage/Homepage\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport AuthForm from \"./components/AuthForm/AuthForm\";\nimport authServices from \"./Services/auth-services\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst App = () => {\n  const initialState = {\n    loggedInUser: JSON.parse(localStorage.getItem(\"loggedInUser\")) || null,\n  };\n  const [state, setState] = useState(initialState);\n\n  const getTheUser = (userObj) => {\n    setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  useEffect(() => {\n    const fetchUser = () => {\n      if (state.loggedInUser === null) {\n        authServices\n          .loggedIn()\n          .then((response) => {\n            localStorage.setItem(\"loggedInUser\", JSON.stringify(response));\n            setState({\n              loggedInUser: response,\n            });\n          })\n          .catch((err) => {\n            setState({\n              loggedInUser: false,\n            });\n          });\n      }\n    };\n    fetchUser();\n  }, [state.loggedInUser]);\n\n  const handleUpdateUser = () => {\n    authServices\n      .loggedIn()\n      .then((response) => {\n        setState({\n          loggedInUser: response,\n        });\n      })\n      .catch((err) => {\n        setState({\n          loggedInUser: false,\n        });\n      });\n  };\n\n  return (\n    <div>\n      <Navbar\n        userInSession={state.loggedInUser}\n        getUser={getTheUser}\n        updateUser={handleUpdateUser}\n      />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <Homepage\n              {...props}\n              userInSession={state.loggedInUser}\n              getUser={getTheUser}\n              updateUser={handleUpdateUser}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={(props) => (\n            <AuthForm\n              {...props}\n              login\n              userInSession={state.loggedInUser}\n              getUser={getTheUser}\n              updateUser={handleUpdateUser}\n              authMessage=\"Don't have any account yet ?\"\n              formRedirectLink=\"/signup\"\n              formRedirectText=\" Sign up\"\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          render={(props) => (\n            <AuthForm\n              {...props}\n              signup\n              userInSession={state.loggedInUser}\n              getUser={getTheUser}\n              updateUser={handleUpdateUser}\n              authMessage=\"Already have an account ?\"\n              formRedirectLink=\"/login\"\n              formRedirectText=\" Login\"\n            />\n          )}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}