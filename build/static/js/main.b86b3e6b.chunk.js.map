{"version":3,"sources":["Services/favorite-place-service.js","components/LocationSearchInput/styles.js","components/LocationSearchInput/LocationSearchInput.jsx","components/Map/styles.js","components/Map/Map.jsx","components/CreateForm/styles.js","components/CreateForm/CreateForm.jsx","components/FavoritePlace/styles.js","components/FavoritePlace/FavoritePlace.jsx","components/Homepage/styles.js","components/Homepage/Homepage.jsx","Services/auth-services.js","components/Navbar/styles.js","components/Navbar/Navbar.jsx","components/AuthForm/styles.js","components/AuthForm/AuthForm.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["favoritePlaceServices","axios","create","baseURL","process","withCredentials","errorHandler","err","formFields","post","then","response","data","catch","get","id","delete","Input","styled","input","PlaceSuggestion","div","LocationSearchInput","props","handleChange","address","setState","handleSelect","geocodeByAddress","results","getLatLng","latLng","setPlace","state","error","console","value","this","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","Fragment","placeholder","className","icon","faSpinner","size","map","suggestion","active","style","backgroundColor","cursor","key","index","description","React","Component","MapContainer","formMap","Map","initialState","name","lat","parseFloat","lng","zoom","useState","center","parseInt","apiIsLoaded","maps","places","bounds","LatLngBounds","forEach","place","extend","LatLng","getMapBounds","fitBounds","event","addDomListenerOnce","addDomListener","window","bindResizeListener","bootstrapURLKeys","defaultCenter","defaultZoom","options","disableDefaultUI","mapTypeControl","streetViewControl","mapTypeId","styles","featureType","elementType","stylers","visibility","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","tripMap","hasOnlyOneLocalisation","allExperiencesCoords","mapType","coord","Marker","position","renderMarkers","StyledFavoritePlaceForm","Error","p","Form","form","Textarea","textarea","ButtonStyled","button","CreateForm","showError","setShowError","formState","setFormState","handleFormSubmit","formObject","preventDefault","log","handleCloseForm","handleRefreshFavoritePlaces","message","target","onSubmit","type","password","newPlace","StyledFavoritePlace","li","Container","Description","DescriptionButton","FavoritePlace","onClick","_id","favoritePlaceService","slideup","keyframes","Visitor","StyledHomepage","FavoritePlacesListContainer","ul","Homepage","displayForm","setDisplayForm","favoritePlaces","setFavoritePlaces","useEffect","userInSession","author","username","refreshFavoritePlaces","favoritePlacesList","to","authService","credentials","localStorage","removeItem","StyledNavbar","Brand","img","Logout","Navbar","loggedInUser","src","alt","faSignOutAlt","authServices","getUser","StyledAuthForm","Message","AuthForm","login","setItem","JSON","stringify","history","push","textAlign","authMessage","formRedirectLink","formRedirectText","App","parse","getItem","getTheUser","userObj","handleUpdateUser","updateUser","exact","path","render","signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b86b3e6b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst favoritePlaceServices = axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}/api`,\n  withCredentials: true,\n});\n\nconst errorHandler = (err) => {\n  throw err;\n};\n\n// eslint-disable-next-line\nexport default {\n  favoritePlaceServices,\n\n  postNewPlace: (formFields) => {\n    return favoritePlaceServices\n      .post(\"/newPlace\", formFields)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  getFavoritePlaces: () => {\n    return favoritePlaceServices\n      .get(\"/favoritePlaces\")\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  deletePlace: (id) => {\n    return favoritePlaceServices\n      .delete(`/favoritePlaces/${id}`)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n};\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n\n  &.btn {\n    &:hover {\n      cursor: pointer;\n      background-color: lightsteelblue;\n    }\n  }\n`;\n\nexport const PlaceSuggestion = styled.div`\n  width: 100%;\n  padding: 8px 20px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n","import React from \"react\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport { Input, PlaceSuggestion } from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: \"\" };\n  }\n\n  handleChange = (address) => {\n    this.setState({ address });\n  };\n\n  handleSelect = (address) => {\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => {\n        this.setState({ address: address, ...latLng });\n        this.props.setPlace(this.state);\n      })\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <React.Fragment>\n            <Input\n              {...getInputProps({\n                placeholder: \"Search Places ...\",\n                className: \"location-search-input\",\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && (\n                <FontAwesomeIcon icon={ faSpinner } size=\"2x\" />\n              )}\n              {suggestions.map((suggestion) => {\n                const className = suggestion.active\n                  ? \"suggestion-item--active\"\n                  : \"suggestion-item\";\n                const style = suggestion.active\n                  ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                  : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                return (\n                  <PlaceSuggestion\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                    key={suggestion.index}\n                  >\n                    <span>{suggestion.description}</span>\n                  </PlaceSuggestion>\n                );\n              })}\n            </div>\n          </React.Fragment>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n\nexport default LocationSearchInput;\n\n// Copyright (c) 2016-present, Ken Hibino\n// See https://kenny-hibino.github.io/react-places-autocomplete\n","import styled from \"styled-components\";\n\nexport const MapContainer = styled.div`\n  width: 500px;\n  height: 334px;\n\n  @media (max-width: 667px) {\n    width: 100%;\n    height: 300px;\n  }\n\n  @media (min-width: 667px) and (max-width: 768px)  {\n    width: 350px;\n    height: 234px;\n  }\n\n  @media (min-width: 768px) and (max-width: 992px)  {\n    width: 400px;\n    height: 267px;\n  }\n\n  ${(props) =>\n    props.formMap &&\n    \"width: 100%; height: 200px; border-radius: 4px;\"};\n`","import React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { MapContainer } from \"./styles\";\n\nconst Map = (props) => {\n  const initialState = {\n    name: props.address,\n    lat: parseFloat(props.lat),\n    lng: parseFloat(props.lng),\n    zoom: props.zoom,\n  };\n  // eslint-disable-next-line\n  const [state, setState] = useState(initialState);\n\n  const center = {\n    lat: state.lat,\n    lng: state.lng,\n  };\n\n  const zoom = parseInt(state.zoom);\n\n  const getMapOptions = (maps) => {\n    return {\n      disableDefaultUI: false,\n      mapTypeControl: true,\n      streetViewControl: true,\n      mapTypeId: 'satellite',\n      styles: [\n        {\n          featureType: \"poi\",\n          elementType: \"labels\",\n          stylers: [{ visibility: \"on\" }],\n        },\n      ],\n    };\n  };\n\n  const getMapBounds = (map, maps, places) => {\n    const bounds = new maps.LatLngBounds();\n\n    places.forEach((place) => {\n      bounds.extend(new maps.LatLng(place.lat, place.lng));\n    });\n    return bounds;\n  };\n\n  const bindResizeListener = (map, maps, bounds) => {\n    maps.event.addDomListenerOnce(map, \"idle\", () => {\n      maps.event.addDomListener(window, \"resize\", () => {\n        map.fitBounds(bounds);\n      });\n    });\n  };\n\n  const apiIsLoaded = (map, maps, places) => {\n    // Get bounds by our places\n    const bounds = getMapBounds(map, maps, places);\n    // Fit map to bounds\n    map.fitBounds(bounds);\n    // Bind the resize listener\n    bindResizeListener(map, maps, bounds);\n  };\n\n  const renderMarkers = (map, maps) => {\n    if (props.mapType === \"tripPresentation\") {\n      props.allExperiencesCoords.forEach((coord) => {\n        // eslint-disable-next-line\n        let marker = new maps.Marker({\n          position: coord,\n          map,\n        });\n      });\n    } else {\n      const position = {\n        lat: state.lat,\n        lng: state.lng,\n      };\n\n      // eslint-disable-next-line\n      let marker = new maps.Marker({\n        position: position,\n        map,\n      });\n    }\n  };\n\n  return (\n    <MapContainer\n      formMap={props.formMap}\n    >\n      <GoogleMapReact\n        key={state.name}\n        bootstrapURLKeys=\"AIzaSyC5R2OYlhvGRMmpofdkJ0jL60Tsa7dtZUY\"\n        defaultCenter={center}\n        defaultZoom={zoom}\n        options={getMapOptions}\n        yesIWantToUseGoogleMapApiInternals\n        onGoogleApiLoaded={({ map, maps }) => {\n          props.tripMap &&\n            !props.hasOnlyOneLocalisation &&\n            apiIsLoaded(map, maps, props.allExperiencesCoords);\n          renderMarkers(map, maps);\n        }}\n      />\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import styled from \"styled-components\";\n\nexport const StyledFavoritePlaceForm = styled.div`\n  text-align: center;\n  color: black;\n`;\n\nexport const Error = styled.p`\n  color: black;\n  border: solid red 1px;\n  border-radius: 4px;\n  max-width: 350px;\n  padding: 10px 20px;\n  box-sizing: border-box;\n  background-color: rgba(241, 169, 160, 0.15);\n\n  @media (min-width: 768px) {\n    width: 350px;\n    margin: 10px auto 0;\n  }\n`;\n\nexport const Form = styled.form`\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  padding: 20px;\n  margin: 20px auto;\n  max-width: 350px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n\n  &.btn {\n    &:hover {\n      cursor: pointer;\n      background-color: lightsteelblue;\n    }\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  height: 100px;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  resize: none;\n\n  &.btn {\n    &:hover {\n      cursor: pointer;\n      background-color: lightsteelblue;\n    }\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  padding: 14px 20px 12px;\n  margin: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: lightsteelblue;\n  }\n`;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport favoritePlaceServices from \"../../Services/favorite-place-service\";\nimport LocationSearchInput from \"../LocationSearchInput/LocationSearchInput\";\nimport Map from \"../Map/Map\";\nimport {\n  StyledFavoritePlaceForm,\n  Error,\n  ButtonStyled,\n  Form,\n  Input,\n  Textarea,\n  Message\n} from \"./styles\";\n\nconst CreateForm = (props) => {\n  const [showError, setShowError] = useState(null)\n  const [formState, setFormState] = useState({\n    name: \"\",\n    description: \"\",\n    place: null,\n  });\n\n  const handleFormSubmit = (event, formObject) => {\n    event.preventDefault();\n\n    favoritePlaceServices\n      .postNewPlace(formObject)\n      .then((response) => {\n        console.log(\"New favorite place created :\", response);\n        props.handleCloseForm();\n        props.handleRefreshFavoritePlaces();\n      })\n      .catch((error) => {\n        console.log(\"Error creating a new favorite place\");\n        setShowError(error.response.data.message);\n      });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const setPlace = (newPlace) => {\n    setFormState((state) => ({\n      ...state,\n      place: {\n        address: newPlace.address,\n        lat: parseFloat(newPlace.lat),\n        lng: parseFloat(newPlace.lng),\n      },\n    }));\n  };\n\n  return (\n    <StyledFavoritePlaceForm>\n      <Form onSubmit={(event) => handleFormSubmit(event, formState)}>\n        <h3>NEW FAVORITE PLACE</h3>\n\n        <React.Fragment>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={formState.name}\n            placeholder=\"Ex: 'Parc de la Ciutadella'\"\n            onChange={handleChange}\n          />\n        </React.Fragment>\n        <React.Fragment>\n          <label>Description</label>\n          <Textarea\n            type=\"text\"\n            name=\"description\"\n            value={formState.password}\n            placeholder=\"Ex: 'A nice park in the center of Barcelona.\"\n            onChange={handleChange}\n            onSubmit={(event) => handleFormSubmit(event, formState)}\n          />\n        </React.Fragment>\n        <React.Fragment>\n          <label>Find the place</label>\n          <LocationSearchInput setPlace={setPlace} />\n          {formState.place && (\n            <React.Fragment>\n              <p>Is this the correct place ?</p>\n              <Map\n                formMap\n                key={formState.place.address}\n                address={formState.place.address}\n                lat={formState.place.lat}\n                lng={formState.place.lng}\n                zoom=\"14\"\n              />\n            </React.Fragment>\n          )}\n        </React.Fragment>\n\n        <ButtonStyled type=\"submit\">ADD</ButtonStyled>\n        {showError && <Error>{showError}</Error>}\n      </Form>\n      \n    </StyledFavoritePlaceForm>\n  );\n};\n\nexport default CreateForm;\n","import styled from \"styled-components\";\n\nexport const StyledFavoritePlace = styled.li`\n  list-style: none;\n  margin: 30px auto;\n\n  h2 {\n    @media (min-width: 667px) and (max-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 667px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  margin-left: 100px;\n  width: 250px;\n  text-align: left;\n\n  @media (max-width: 667px) {\n    align-items: center;\n    margin-left: 0;\n  }\n\n  @media (min-width: 667px) and (max-width: 768px) {\n    width: 200px;\n    margin-left: 50px;\n  }\n\n  @media (min-width: 768px) and (max-width: 992px) {\n    width: 225px;\n    margin-left: 80px;\n  }\n`;\n\nexport const DescriptionButton = styled.button`\n  padding: 14px 20px 12px;\n  margin: 30px 0;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n\n  @media (max-width: 667px) {\n    margin: 20px 0 10px;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: lightsteelblue;\n  }\n`;","import React from \"react\";\nimport { StyledFavoritePlace, DescriptionButton, Description, Container } from \"./styles\";\nimport favoritePlaceService from \"../../Services/favorite-place-service\";\nimport Map from \"../Map/Map\"\n\nconst FavoritePlace = (props) => {\n  const deleteFavoritePlace = (id) => {\n    favoritePlaceService\n      .deletePlace(id)\n      .then((response) => {\n        console.log(\"Place deleted:\", response);\n        props.handleRefreshFavoritePlaces()\n      })\n      .catch((err) => {\n        console.log(\"Error while deleting favorite place\");\n      });\n  };\n\n  return (\n    <StyledFavoritePlace>\n      <Container>\n        <Map\n          key={props.place.place.address}\n          address={props.place.place.address}\n          lat={parseFloat(props.place.place.lat)}\n          lng={parseFloat(props.place.place.lng)}\n          zoom=\"14\"\n        />\n        <Description>\n          <h2>{props.place.name}</h2>\n          <p>{props.place.description && props.place.description}</p>\n          <DescriptionButton onClick={() => deleteFavoritePlace(props.place._id)}>\n            DELETE\n          </DescriptionButton>\n        </Description>\n      </Container>\n    </StyledFavoritePlace>\n  );\n};\n\nexport default FavoritePlace;\n","import styled, { keyframes } from \"styled-components\";\n\nconst slideup = keyframes`\n  0%   {opacity: 0; top: 50%;}\n  100% {opacity: 1; top: 40%;}\n`;\n\nexport const Visitor = styled.div`\n  position: absolute; \n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%); \n  animation: ${slideup} 1s;\n`;\n\nexport const StyledHomepage = styled.div`\n  text-align: center;\n\n`;\n\nexport const FavoritePlacesListContainer = styled.ul`\n  margin: 0 20px;\n  padding: 0;\n`;\n\nexport const ButtonStyled = styled.button`\n  padding: 14px 20px 12px;\n  margin: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: lightsteelblue;\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport favoritePlaceService from \"../../Services/favorite-place-service\";\nimport CreateForm from \"../CreateForm/CreateForm\";\nimport FavoritePlace from \"../FavoritePlace/FavoritePlace\";\nimport {\n  StyledHomepage,\n  ButtonStyled,\n  FavoritePlacesListContainer,\n  Visitor\n} from \"./styles\";\n\nconst Homepage = (props) => {\n  const [displayForm, setDisplayForm] = useState(false);\n  const [favoritePlaces, setFavoritePlaces] = useState([]);\n\n  const toggleForm = () => {\n    setDisplayForm(!displayForm);\n  };\n\n  const closeForm = () => {\n    setDisplayForm(false);\n  };\n\n  useEffect(() => {\n    if (props.userInSession) {\n      favoritePlaceService\n        .getFavoritePlaces({ author: props.userInSession.username })\n        .then((response) => {\n          setFavoritePlaces(response);\n        })\n        .catch((err) => {\n          console.log(\"Error while getting favorite places\");\n        });\n    }\n  }, [props.userInSession]);\n\n  const refreshFavoritePlaces = () => {\n    favoritePlaceService\n      .getFavoritePlaces({ author: props.userInSession.username })\n      .then((response) => {\n        setFavoritePlaces(response);\n      })\n      .catch((err) => {\n        console.log(\"Error while getting favorite places\");\n      });\n  };\n\n  const favoritePlacesList = favoritePlaces.map((place) => {\n    return (\n      <FavoritePlace\n        key={place._id}\n        place={place}\n        handleRefreshFavoritePlaces={refreshFavoritePlaces}\n      />\n    );\n  });\n\n  return (\n    <StyledHomepage>\n      {props.userInSession ? (\n        <>\n          <h1>Hi {props.userInSession.username} !</h1>\n          <p>Here is a list of your favorite places</p>\n          <ButtonStyled onClick={toggleForm}>\n            {displayForm ? \"CLOSE\" : \"ADD A NEW FAVORITE PLACE\"}\n          </ButtonStyled>\n          {displayForm && (\n            <CreateForm\n              userInSession={props.userInSession}\n              handleCloseForm={closeForm}\n              handleRefreshFavoritePlaces={refreshFavoritePlaces}\n            />\n          )}\n          {favoritePlaces && (\n            <FavoritePlacesListContainer>\n              {favoritePlacesList}\n            </FavoritePlacesListContainer>\n          )}\n        </>\n      ) : (\n        <Visitor>\n          <h1>Welcome to myFavoritePlaces!</h1>\n          <Link to=\"login\">\n            <ButtonStyled>LOGIN</ButtonStyled>\n          </Link>\n          <Link to=\"signup\">\n            <ButtonStyled>SIGN UP</ButtonStyled>\n          </Link>\n        </Visitor>\n      )}\n    </StyledHomepage>\n  );\n};\n\nexport default Homepage;\n","import axios from \"axios\";\n\nconst authService = axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}/api`,\n  withCredentials: true,\n});\n\nconst errorHandler = (err) => {\n  throw err;\n};\n\n// eslint-disable-next-line\nexport default {\n  authService,\n\n  getUser: (userId) => {\n    return authService\n      .get(`/getUser/${userId}`)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  signup: (credentials) => {\n    return authService\n      .post(\"/signup\", credentials)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  loggedIn: () => {\n    return authService\n      .get(\"/loggedIn\")\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  login: (credentials) => {\n    return authService\n      .post(\"/login\", credentials)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  logout: () => {\n    localStorage.removeItem(\"loggedInUser\");\n    return authService\n      .post(\"/logout\", {})\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n\n  toggleAddToFavorites: (id) => {\n    return authService\n      .put(`/toggleAddToFavorites/${id}`)\n      .then((response) => response.data)\n      .catch(errorHandler);\n  },\n};","import styled from \"styled-components\";\n\nexport const StyledNavbar = styled.div`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  top: 0;\n  height: 50px;\n  margin-bottom: 100px;\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport const Brand = styled.img`\n  margin-top: 40px;\n  width: 350px;\n\n  @media (max-width: 400px) {\n    width: 175px;\n  }\n\n  @media (min-width: 400px) and (max-width: 500px) {\n    width: 225px;\n  }\n\n  @media (min-width: 500px) and (max-width: 768px) {\n    width: 275px;\n  }\n\n  @media (min-width: 768px) and (max-width: 992px) {\n    margin-top: 40px;\n    width: 325px;\n  }\n`;\n\nexport const Logout = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 40px;\n  font-size: 34px;\n  cursor: pointer;\n\n  @media (max-width: 400px) {\n    font-size: 20px;\n  }\n\n  @media (min-width: 400px) and (max-width: 500px) {\n    font-size: 24px;\n  }\n\n  @media (min-width: 500px) and (max-width: 768px) {\n    font-size: 28px;\n  }\n\n  @media (min-width: 768px) and (max-width: 992px) {\n    font-size: 32px;\n  }\n`;","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport authServices from \"../../Services/auth-services\";\nimport { StyledNavbar, Brand, Logout } from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nconst publicPath = process.env.PUBLIC_URL;\n\nconst Navbar = (props) => {\n  const initialState = { loggedInUser: null };\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState({ loggedInUser: props.userInSession });\n  }, [props.userInSession]);\n\n  const logoutUser = () => {\n    authServices.logout().then(() => {\n      setState({ loggedInUser: null });\n      props.getUser(null);\n    });\n  };\n\n  return (\n    <StyledNavbar>\n      <Link to=\"/\">\n        <Brand src={`${publicPath}/logo_white.png`} alt=\"Brand\" />\n      </Link>\n      {state.loggedInUser && (\n        <Logout>\n          <FontAwesomeIcon icon={faSignOutAlt} onClick={logoutUser} />\n        </Logout>\n      )}\n    </StyledNavbar>\n  );\n};\n\nexport default Navbar;\n","import styled from \"styled-components\";\n\nexport const StyledAuthForm = styled.div`\n  text-align: center;\n  color: black;\n`;\n\nexport const Error = styled.p`\n  color: black;\n  border: solid red 1px;\n  border-radius: 4px;\n  max-width: 350px;\n  padding: 10px 20px;\n  box-sizing: border-box;\n  background-color: rgba(241, 169, 160, 0.15);\n\n  @media (min-width: 768px) {\n    width: 350px;\n    margin: 10px auto 0;\n  }\n`;\n\nexport const Message = styled.p`\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  padding: 10px 20px;\n  margin: 20px auto;\n  max-width: 350px;\n\n  a {\n    text-decoration: none;\n    color: blue;\n  }\n`;\n\nexport const Form = styled.form`\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  padding: 20px;\n  margin: 20px auto;\n  max-width: 350px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nexport const ButtonStyled = styled.button`\n  padding: 14px 20px 12px;\n  margin: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: lightsteelblue;\n  }\n`;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport authServices from \"../../Services/auth-services\";\nimport {\n  StyledAuthForm,\n  Error,\n  ButtonStyled,\n  Form,\n  Input,\n  Message,\n} from \"./styles\";\n\nconst AuthForm = (props) => {\n  const [showError, setShowError] = useState(\"\");\n  const [formState, setFormState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleFormSubmit = (event, formObject) => {\n    event.preventDefault();\n    const dynamicService = props.login\n      ? authServices.login(formObject)\n      : authServices.signup(formObject);\n\n    dynamicService\n      .then((response) => {\n        localStorage.setItem(\"loggedInUser\", JSON.stringify(response));\n        props.getUser(response);\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(\"Error while login/signup\");\n        setShowError(error.response.data.message);\n      });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <StyledAuthForm>\n      <Form onSubmit={(event) => handleFormSubmit(event, formState)}>\n        <h3>{props.login ? \"LOGIN\" : \"SIGNUP\"}</h3>\n\n        <React.Fragment>\n          <label>Username</label>\n          <Input\n            type=\"text\"\n            name=\"username\"\n            value={formState.username}\n            placeholder=\"Enter your username\"\n            onChange={handleChange}\n          />\n        </React.Fragment>\n        <React.Fragment>\n          <label>Password</label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={formState.password}\n            placeholder=\"*******\"\n            onChange={handleChange}\n            onSubmit={(event) => handleFormSubmit(event, formState)}\n          />\n        </React.Fragment>\n\n        <ButtonStyled type=\"submit\">\n          {props.login ? \"LOGIN\" : \"SIGN UP\"}\n        </ButtonStyled>\n        {showError && <Error>{showError}</Error>}\n      </Form>\n      <Message style={{ textAlign: \"center\" }}>\n        {props.authMessage}\n        <Link to={`${props.formRedirectLink}`}>{props.formRedirectText}</Link>\n      </Message>\n    </StyledAuthForm>\n  );\n};\n\nexport default AuthForm;\n","import Homepage from \"./components/Homepage/Homepage\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport AuthForm from \"./components/AuthForm/AuthForm\";\nimport authServices from \"./Services/auth-services\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst App = () => {\n  const initialState = {\n    loggedInUser: JSON.parse(localStorage.getItem(\"loggedInUser\")) || null,\n  };\n  const [state, setState] = useState(initialState);\n\n  const getTheUser = (userObj) => {\n    setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  useEffect(() => {\n    const fetchUser = () => {\n      if (state.loggedInUser === null) {\n        authServices\n          .loggedIn()\n          .then((response) => {\n            localStorage.setItem(\"loggedInUser\", JSON.stringify(response));\n            setState({\n              loggedInUser: response,\n            });\n          })\n          .catch((err) => {\n            setState({\n              loggedInUser: false,\n            });\n          });\n      }\n    };\n    fetchUser();\n  }, [state.loggedInUser]);\n\n  const handleUpdateUser = () => {\n    authServices\n      .loggedIn()\n      .then((response) => {\n        setState({\n          loggedInUser: response,\n        });\n      })\n      .catch((err) => {\n        setState({\n          loggedInUser: false,\n        });\n      });\n  };\n\n  return (\n    <div>\n      <Navbar\n        userInSession={state.loggedInUser}\n        getUser={getTheUser}\n        updateUser={handleUpdateUser}\n      />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <Homepage\n              {...props}\n              userInSession={state.loggedInUser}\n              getUser={getTheUser}\n              updateUser={handleUpdateUser}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={(props) => (\n            <AuthForm\n              {...props}\n              login\n              userInSession={state.loggedInUser}\n              getUser={getTheUser}\n              updateUser={handleUpdateUser}\n              authMessage=\"Don't have any account yet ?\"\n              formRedirectLink=\"/signup\"\n              formRedirectText=\" Sign up\"\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          render={(props) => (\n            <AuthForm\n              {...props}\n              signup\n              userInSession={state.loggedInUser}\n              getUser={getTheUser}\n              updateUser={handleUpdateUser}\n              authMessage=\"Already have an account ?\"\n              formRedirectLink=\"/login\"\n              formRedirectText=\" Login\"\n            />\n          )}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}